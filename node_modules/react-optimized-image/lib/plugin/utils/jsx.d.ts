import { JSXElement, JSXAttribute } from '@babel/types';
import { NodePath } from '@babel/core';
/**
 * Gets the specified attribute of a JSX component
 *
 * @param {NodePath<JSXElement>} path
 * @param {string} attributeName
 * @returns {NodePath<JSXAttribute> | undefined}
 */
export declare const getAttribute: (path: NodePath<JSXElement>, attributeName: string) => NodePath<JSXAttribute> | undefined;
/**
 * Gets the value of a boolean JSX attribute
 *
 * @param {NodePath<JSXElement>} path
 * @param {string} attributeName
 * @returns {boolean | undefined}
 */
export declare const getBooleanAttribute: (path: NodePath<JSXElement>, attributeName: string) => boolean | undefined;
/**
 * Returns and validates the type argument
 *
 * @param {NodePath<JSXElement>} path
 * @param {string[]} types
 * @returns {string|undefined}
 */
export declare const getTypeAttribute: (path: NodePath<JSXElement>, types: string[]) => string | undefined;
/**
 * Gets the value of a numbered array JSX attribute
 *
 * @param {NodePath<JSXElement>} path
 * @param {string} attributeName
 * @returns {number[] | undefined}
 */
export declare const getNumberedArrayAttribute: (path: NodePath<JSXElement>, attributeName: string) => number[] | undefined;
